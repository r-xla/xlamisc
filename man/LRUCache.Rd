% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lru_cache.R
\name{LRUCache}
\alias{LRUCache}
\title{Least Recently Used Cache}
\description{
An implementation of a least-recently-used cache built on top of \code{\link[utils:hashtab]{utils::hashtab}}, which
therefore takes care of hash collisions.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LRUCache-new}{\code{LRUCache$new()}}
\item \href{#method-LRUCache-get}{\code{LRUCache$get()}}
\item \href{#method-LRUCache-set}{\code{LRUCache$set()}}
\item \href{#method-LRUCache-has}{\code{LRUCache$has()}}
\item \href{#method-LRUCache-remove}{\code{LRUCache$remove()}}
\item \href{#method-LRUCache-clear}{\code{LRUCache$clear()}}
\item \href{#method-LRUCache-size}{\code{LRUCache$size()}}
\item \href{#method-LRUCache-capacity}{\code{LRUCache$capacity()}}
\item \href{#method-LRUCache-keys_mru_to_lru}{\code{LRUCache$keys_mru_to_lru()}}
\item \href{#method-LRUCache-clone}{\code{LRUCache$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-new"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new LRU cache with a given \code{capacity}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$new(capacity)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{capacity}}{(\code{integer(1)})\cr
Number of items the cache holds.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-get"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-get}{}}}
\subsection{Method \code{get()}}{
Get the value for \code{key} and mark it as most-recently-used.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$get(key, default = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{(\code{any})\cr
Key.}

\item{\code{default}}{(\code{any})\cr
Default value returned by \code{get()} when \code{key} is not present.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-set"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-set}{}}}
\subsection{Method \code{set()}}{
Set the value for \code{key}, updating recency and evicting LRU as needed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$set(key, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{(\code{any})\cr
Key.}

\item{\code{value}}{(\code{any})\cr
Value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-has"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-has}{}}}
\subsection{Method \code{has()}}{
Check whether a given \code{key} exists in the cache.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$has(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{(\code{any})\cr
Key.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-remove"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-remove}{}}}
\subsection{Method \code{remove()}}{
Remove \code{key} from the cache, returning \code{TRUE} if it was present.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$remove(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{(\code{any})\cr
Key.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-clear"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-clear}{}}}
\subsection{Method \code{clear()}}{
Clear all entries from the cache.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$clear()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-size"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-size}{}}}
\subsection{Method \code{size()}}{
Return the number of items currently stored.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$size()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-capacity"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-capacity}{}}}
\subsection{Method \code{capacity()}}{
Return the maximum capacity of the cache.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$capacity()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-keys_mru_to_lru"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-keys_mru_to_lru}{}}}
\subsection{Method \code{keys_mru_to_lru()}}{
Return keys ordered from most-recently-used to least-recently-used.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$keys_mru_to_lru()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LRUCache-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LRUCache-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LRUCache$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
